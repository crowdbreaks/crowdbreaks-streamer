# Flask API
server {
  listen 80;
  server_name ${API_VIRTUALHOST} www.${API_VIRTUALHOST};
  return 301 https://${API_VIRTUALHOST}$request_uri;
}
server {
  listen 443 ssl; # managed by Certbot
  server_name ${API_VIRTUALHOST} www.${API_VIRTUALHOST};
  ssl_certificate /etc/letsencrypt/live/${API_VIRTUALHOST}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${API_VIRTUALHOST}/privkey.pem;
  #include /etc/letsencrypt/options-ssl-nginx.conf;
  #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
    proxy_pass         http://web:8000;
    proxy_redirect     off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# Elasticsearch forwarding
server {
  listen 80;
  server_name ${ES_VIRTUALHOST} www.${ES_VIRTUALHOST};
  return 301 https://${ES_VIRTUALHOST}$request_uri;
}
server{
  listen 443 ssl; # managed by Certbot
  server_name ${ES_VIRTUALHOST} www.${ES_VIRTUALHOST};
  ssl_certificate /etc/letsencrypt/live/${ES_VIRTUALHOST}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${ES_VIRTUALHOST}/privkey.pem;
  #include /etc/letsencrypt/options-ssl-nginx.conf;
  #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
    rewrite ^/(.*) /$1 break;
    proxy_ignore_client_abort on;
    proxy_pass http://${ELASTICSEARCH_HOST};
    proxy_redirect http://${ELASTICSEARCH_HOST} http://${ES_VIRTUALHOST};
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header Authorization "";
    proxy_hide_header Authorization;
    auth_basic "Elasticsearch Authentication";
    auth_basic_user_file /etc/nginx/passwd/${ES_BASICAUTH_PASSWD};
  }
}
