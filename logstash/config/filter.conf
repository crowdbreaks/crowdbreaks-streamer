#input { 
#  stdin{}
#}
# input {
#   twitter {
#     consumer_key => "MxJI7WGIo97AFp5Nhe4kJECw7"
#     consumer_secret => "4yL2Tx2LZY2GbmjI8KtWR7wP39B2akJTOODEmOukiDfqwEnnKE"
#     oauth_token => "743827585566654464-0rfiH2Af7RwjJ6nEkCZijw2f9ohX91s"
#     oauth_token_secret => "GwVwpav68wTC6ix0vuqpPpQK5RYDFkSMsVQYl9oxhcVbE"
#     keywords => ['flu', 'vaccine']
#     languages => ['en']
#     full_tweet => true
#     ignore_retweets => true
#     tags => ['project_vaccine_sentiment']
#   }
# }


filter {
	# project tag
  mutate {
    add_field => { "project" => "%{tags[0]}" }
    remove_field => [ "tags", "host", "@timestamp", "@version", "message" ]
  }

  ruby {
    code => '
    # set body
    require "base64";
    require "json";
    #require "secure_random";
    args = [event.to_hash];
    body = {
      :args => args,
      :task => "cb.process_tweet",
      :id => SecureRandom.uuid
    }.to_json;
    event.set("body", Base64.encode64(body.gsub(/\n/, "")));

    event.to_hash.keys.each { |k|
      unless k == "body"
        event.remove(k)
      end
    }
    
    # set celery options
    queue_name = "cb:logstash"
    h = {
      "body_encoding" => "base64",
      "delivery_mode" => 2,
      "delivery_info" => {
        "priority" => 0,
        "routing_key" => queue_name,
        "exchange" => queue_name
      }
    }
    event.set("properties", h)
      '
  }
  uuid {
    target => "[properties][correlation_id]"
  }
  uuid {
    target => "[properties][reply_to]"
  }
  uuid {
    target => "[properties][delivery_tag]"
  }
  mutate {
    add_field => {
      "content-type" => "application/json"
    }
  }
}
