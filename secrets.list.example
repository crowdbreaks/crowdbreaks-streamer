# Notes:
# - Copy this file and rename it to secrets.list
# - Enter all secrets here. Omit single/double quotation marks around strings (they will be taken literally)
# - True/False valus are denoted as 0 and 1
# - Make sure to remove all explanatory comments right of the key-value assignments (they will be assigned to the key otherwise)
# - Values which are set here already probably don't need to be changed (if used in development environment)

# Environment. Valid values: 'dev','stg','prd'
ENV=dev

# Basic auth for Flask endpoints (e.g. on api.crowdbreaks.org)
BASIC_AUTH_USERNAME=
BASIC_AUTH_PASSWORD=

# Elasticserach
ELASTICSEARCH_HOST=elasticsearch         # Elasticsearch host, in development runs in local docker container
ELASTICSEARCH_PORT=9200

# AWS
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
S3_BUCKET=                               # S3 bucket to store stream data to

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# Redis queues/namespaces
REDIS_NAMESPACE=cb                       # Application namespace
REDIS_STREAM_QUEUE_KEY=stream            # Stream namespace

# Stream
PAUSE_STREAM_ON_STARTUP=1                # Stream data on start up

# Twitter
CONSUMER_KEY=
CONSUMER_SECRET=
OAUTH_TOKEN=
OAUTH_TOKEN_SECRET=

# Celery
CELERY_BROKER_URL=redis://redis:6379/0   # Use local redis as message broker and result backend
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Nginx
API_VIRTUALHOST=api-stg.crowdbreaks.org
KIBANA_VIRTUALHOST=kibana-stg.crowdbreaks.org
KIBANA_HOST=search-XXX.XXX.es.amazonaws.com/_plugin/kibana/  # KIBANA_VIRTUALHOST redirects to KIBANA_HOST

# email
SEND_EMAILS=1                            # Send out any emails (Emails are only sent if ENV=prd)
EMAIL_STREAM_STATUS_DAILY=               # Send-to address for daily updates
EMAIL_STREAM_STATUS_WEEKLY=              # Send-to address for weekly updates
EMAIL_FROM_ADDR=info@crowdbreaks.org
MANDRILL_API_KEY=

# Rollbar
ROLLBAR_ACCESS_TOKEN=

# Other
TIMEZONE=Europe/Zurich
